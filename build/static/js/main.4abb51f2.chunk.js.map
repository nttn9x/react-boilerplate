{"version":3,"sources":["component/ui-libraries/typography/index.tsx","component/ui-libraries/icon-button/index.tsx","utils/http-interceptors/request.tsx","utils/service.util.tsx","context/service.context.tsx","constants/navigation.tsx","routes/public/public.components.route.tsx","routes/public/public.type.route.tsx","routes/private/private.components.route.tsx","routes/private/private.type.route.tsx","component/ui-own/progress/loader/loader.component.tsx","component/ui-own/layout/layout-menu/layout-menu.component.tsx","component/ui-own/user-settings/user-settings.component.tsx","component/ui-own/layout/layout-header.component.tsx","component/ui-own/layout/layout.component.tsx","context/theme.context.tsx","routes/index.route.tsx","store/middlewares.tsx","store/reducer.tsx","store/index.tsx","serviceWorker.ts","i18n.tsx","index.tsx","constants/common.tsx","component/ui-own/layout/layout.module.scss","context/auth.context.tsx","utils/auth.tsx"],"names":["formatError","error","response","status","isError","statusMessage","HTTP_CODE","Unauthorized","statusText","request","message","setUpApi","axios","defaults","baseURL","API_ENDPOINT","headers","post","interceptors","use","config","Authorization","getAccessToken","Promise","reject","data","formatResponse","callApi","options","enqueueSnackbar","catch","err","variant","SNACKBAR_TYPE","Error","ServiceContext","createContext","apiGet","apiPost","apiDelete","apiPut","useServiceContext","useContext","ServiceProvider","props","useSnackbar","Provider","value","method","ROUTES","routes","exact","path","component","lazy","PublicRoute","ListPublicRoutes","map","route","i","key","SIDE_BAR","keyi18n","linkTo","Dashboard","icon","Users","Fields","PrivateRoute","Routes","Component","rest","useAuthDataContext","isAuth","to","pathname","Circular","className","withRouter","history","t","useTranslation","useState","anchorEl","setAnchorEl","doChangePage","event","url","currentTarget","getAttribute","push","console","log","edge","color","aria-label","onClick","Menu","keepMounted","open","Boolean","onClose","e","MenuItem","ListItemIcon","useStyles","makeStyles","theme","createStyles","root","width","avatar","background","palette","primary","main","UserSettings","classes","onLogout","classeOwns","React","handleClose","Avatar","Popover","anchorOrigin","vertical","horizontal","transformOrigin","paper","LayoutHeader","AppBar","id","style","header","Toolbar","header__title","header__settings","Layout","children","CssBaseline","classnames","body","ThemesProvider","useMemo","createMuiTheme","primaryColor","secondary","secondaryColor","ThemeProvider","Root","fallback","asyncer","dispatch","state","action","initialState","mainReducer","GlobalStore","useReducer","dispatchBase","useCallback","isLocalhost","window","location","hostname","match","register","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","then","contentType","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","i18n","initReactI18next","init","resources","en","common","app_name","lets_go","sign_in","sign_out","username","password","delete","this_field_is_required","dashboard","users","fields","todo","input_placeholder","vi","lng","fallbackLng","interpolation","escapeValue","document","createElement","append","ReactDOM","render","generateUI","JWT_THE_KEY_OF_THE_LIFE","module","exports","AuthDataContext","authData","onLogin","AuthDataProvider","getUser","setAuthData","user","setToken","removeToken","alert","localStorage","setItem","JSON","stringify","accessToken","removeItem","getToken","token","getItem","parse","atob","split","firstString","userId","charAt"],"mappings":"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","file":"static/js/main.4abb51f2.chunk.js","sourcesContent":["export { default } from \"@material-ui/core/Typography\";\n","export { default } from \"@material-ui/core/IconButton\";\n","import axios from \"axios\";\r\n\r\nimport { getAccessToken } from \"../auth\";\r\n\r\nimport { API_ENDPOINT, HTTP_CODE } from \"../../constants/common\";\r\n\r\nfunction formatResponse(response: any): any {\r\n  return {\r\n    isError: true,\r\n    data: response.data\r\n  };\r\n}\r\n\r\nexport function formatError(error: any) {\r\n  if (error.response) {\r\n    // The request was made and the server responded with a status code\r\n    // that falls out of the range of 2xx\r\n    const status = error.response.status;\r\n    return {\r\n      isError: true,\r\n      statusMessage:\r\n        status === HTTP_CODE.Unauthorized\r\n          ? \"Unauthorized\"\r\n          : error.response.statusText,\r\n      status\r\n    };\r\n  } else if (error.request) {\r\n    // The request was made but no response was received\r\n    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n    // http.ClientRequest in node.js\r\n    return {\r\n      isError: true,\r\n      statusMessage: error.request.statusText\r\n    };\r\n  }\r\n  // Something happened in setting up the request that triggered an Error\r\n  return { isError: true, statusMessage: error.message };\r\n}\r\n\r\nfunction handleBeforeCallApi() {\r\n  // Add a request interceptor\r\n  axios.interceptors.request.use(\r\n    function(config) {\r\n      // Do something before request is sent\r\n      config.headers.Authorization = `Bearer ${getAccessToken()}`;\r\n\r\n      return config;\r\n    },\r\n    function(error) {\r\n      // Do something with request error\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n\r\nfunction handleAfterCallApi() {\r\n  // Add a response interceptor\r\n  axios.interceptors.response.use(\r\n    function(response: any): any {\r\n      // Any status code that lie within the range of 2xx cause this function to trigger\r\n      // Do something with response data\r\n      return formatResponse(response);\r\n    },\r\n    function(error: any) {\r\n      // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n      // Do something with response error\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n\r\nfunction setUpApi() {\r\n  axios.defaults.baseURL = API_ENDPOINT;\r\n  axios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\n  handleBeforeCallApi();\r\n\r\n  handleAfterCallApi();\r\n}\r\n\r\nexport { setUpApi };\r\n","import axios, { AxiosRequestConfig } from \"axios\";\n\nimport { formatError } from \"./http-interceptors/request\";\n\nimport { SNACKBAR_TYPE } from \"../constants/common\";\n\nexport function callApi(options: AxiosRequestConfig, enqueueSnackbar: any) {\n  return axios(options).catch(function(error) {\n    const err = formatError(error);\n    enqueueSnackbar(err.statusMessage, { variant: SNACKBAR_TYPE.Error });\n  });\n}\n","import React, { createContext, useContext } from \"react\";\n\nimport { callApi } from \"../utils/service.util\";\nimport { AxiosRequestConfig } from \"axios\";\n\nimport { useSnackbar } from \"notistack\";\n\ninterface IServiceContext {\n  apiGet: any;\n  apiPost: any;\n  apiDelete: any;\n  apiPut: any;\n}\n\nexport const ServiceContext = createContext<IServiceContext>({\n  apiGet: null,\n  apiPost: null,\n  apiDelete: null,\n  apiPut: null\n});\n\nconst ServiceProvider = (props: any) => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  function apiPost(options: AxiosRequestConfig) {\n    return callApi(\n      {\n        method: \"POST\",\n        ...options\n      },\n      enqueueSnackbar\n    );\n  }\n  function apiGet(options: AxiosRequestConfig) {\n    return callApi(\n      {\n        method: \"GET\",\n        ...options\n      },\n      enqueueSnackbar\n    );\n  }\n  function apiDelete(options: AxiosRequestConfig) {\n    return callApi(\n      {\n        method: \"DELETE\",\n        ...options\n      },\n      enqueueSnackbar\n    );\n  }\n  function apiPut(options: AxiosRequestConfig) {\n    return callApi(\n      {\n        method: \"PUT\",\n        ...options\n      },\n      enqueueSnackbar\n    );\n  }\n\n  return (\n    <ServiceContext.Provider\n      value={{ apiDelete, apiPut, apiGet, apiPost }}\n      {...props}\n    />\n  );\n};\n\nexport const useServiceContext = () =>\n  useContext<IServiceContext>(ServiceContext);\n\nexport default ServiceProvider;\n","import React from \"react\";\n\nimport DashboardIcon from \"../component/ui-libraries/icons/dashboard\";\nimport TextFieldsIcon from \"../component/ui-libraries/icons/text-fields\";\nimport GroupIcon from \"../component/ui-libraries/icons/group\";\n\nexport enum ROUTES {\n  Dashboard = \"/\",\n  Users = \"/users\",\n  Fields = \"/fields\"\n}\n\nexport const SIDE_BAR = [\n  {\n    keyi18n: \"dashboard\",\n    linkTo: ROUTES.Dashboard,\n    icon: <DashboardIcon />\n  },\n  {\n    keyi18n: \"users\",\n    linkTo: ROUTES.Users,\n    icon: <GroupIcon />\n  },\n  {\n    keyi18n: \"fields\",\n    linkTo: ROUTES.Fields,\n    icon: <TextFieldsIcon />\n  }\n];\n","import { lazy } from \"react\";\nimport { RouteProps } from \"react-router-dom\";\n\nconst Login = lazy(() => import(\"../../pages/public/login/login.container\"));\n\nconst routes: RouteProps[] = [\n  {\n    exact: true,\n    path: \"/login\",\n    component: Login\n  }\n];\n\nexport default routes;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport ListPublicRoutes from \"./public.components.route\";\n\nconst PublicRoute: React.FC = () => (\n  <>\n    {ListPublicRoutes.map((route, i) => (\n      <Route key={i} {...route} />\n    ))}\n  </>\n);\n\nexport default PublicRoute;\n","import { lazy } from \"react\";\nimport { RouteProps } from \"react-router-dom\";\n\nimport { ROUTES } from \"../../constants/navigation\";\n\nconst Fields = lazy(() =>\n  import(\"../../pages/private/fields/fields.container\")\n);\n\nconst Users = lazy(() => import(\"../../pages/private/users/users.container\"));\n\nconst Dashboard = lazy(() =>\n  import(\"../../pages/private/dashboard/dashboard.container\")\n);\n\nconst routes: RouteProps[] = [\n  {\n    exact: true,\n    path: ROUTES.Dashboard,\n    component: Dashboard\n  },\n  {\n    exact: true,\n    path: ROUTES.Fields,\n    component: Fields\n  },\n  {\n    exact: true,\n    path: ROUTES.Users,\n    component: Users\n  }\n];\n\nexport default routes;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport Routes from \"./private.components.route\";\n\nimport { useAuthDataContext } from \"../../context/auth.context\";\n\nconst withAuth = (Component: any) => (props: any) => {\n  const { isAuth } = useAuthDataContext();\n\n  if (!isAuth) {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/login\"\n        }}\n      />\n    );\n  }\n  return <Component {...props} />;\n};\n\nconst PrivateRoute: React.SFC = () => (\n  <>\n    {Routes.map(({ component, ...rest }: any, i) => (\n      <Route key={`key_r_p_${i}`} {...rest} component={withAuth(component)} />\n    ))}\n  </>\n);\n\nexport default PrivateRoute;\n","import React from \"react\";\n\nimport \"./loader.scss\";\n\nconst Circular: React.FC = () => {\n  return (\n    <div className=\"loader\">\n      <div className=\"loader__body\">\n        <div className=\"rect1\" />\n        <div className=\"rect2\" />\n        <div className=\"rect3\" />\n        <div className=\"rect4\" />\n        <div className=\"rect5\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Circular;\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router\";\n\nimport IconButton from \"../../../ui-libraries/icon-button\";\nimport Menu from \"../../../ui-libraries/menu\";\nimport MenuItem from \"../../../ui-libraries/menu-item\";\nimport ListItemIcon from \"../../../ui-libraries/list-item-icon\";\nimport MenuIcon from \"../../../ui-libraries/icons/menu\";\n\nimport { SIDE_BAR } from \"../../../../constants/navigation\";\n\nimport { useTranslation } from \"react-i18next\";\n\ninterface ILayoutMenuProps {\n  history: any;\n}\n\nconst LayoutMenu: React.FC<ILayoutMenuProps> = ({ history }) => {\n  const { t } = useTranslation([\"common\"]);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  function handleClick(event: React.MouseEvent<HTMLElement>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function doChangePage(event: React.MouseEvent<HTMLElement>) {\n    try {\n      const url = event.currentTarget.getAttribute(\"value\");\n      history.push(url);\n    } catch (error) {\n      console.log(error);\n    }\n\n    setAnchorEl(null);\n  }\n\n  return (\n    <>\n      <IconButton\n        edge=\"start\"\n        color=\"primary\"\n        aria-label=\"menu\"\n        onClick={handleClick}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {SIDE_BAR.map((e, i) => (\n          <MenuItem\n            key={`lm_h_${e.linkTo}`}\n            value={e.linkTo}\n            onClick={doChangePage}\n          >\n            <ListItemIcon>{e.icon}</ListItemIcon>\n            {t(e.keyi18n)}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default withRouter(LayoutMenu);\n","import React from \"react\";\n\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\nimport IconButton from \"../../ui-libraries/icon-button\";\nimport Avatar from \"../../ui-libraries/avatar\";\nimport Popover from \"../../ui-libraries/popover\";\nimport Menu from \"../../ui-libraries/menu\";\nimport MenuItem from \"../../ui-libraries/menu-item\";\nimport ListItemIcon from \"../../ui-libraries/list-item-icon\";\nimport Typography from \"../../ui-libraries/typography\";\n\nimport ExitToAppIcon from \"../../ui-libraries/icons/exit-to-app\";\n\nimport { useTranslation } from \"react-i18next\";\n\ninterface IUserSettingsProps {\n  classes: any;\n  onLogout: Function;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 300\n    },\n    avatar: {\n      background: theme.palette.primary.main\n    }\n  })\n);\n\nconst UserSettings: React.FC<IUserSettingsProps> = ({ classes, onLogout }) => {\n  const classeOwns = useStyles();\n  const { t } = useTranslation([\"common\"]);\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  function handleClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function doLogout() {\n    onLogout();\n  }\n\n  return (\n    <>\n      <IconButton onClick={handleClick}>\n        <Avatar className={`${classes.avatar} ${classeOwns.avatar}`}>H</Avatar>\n      </IconButton>\n      <Popover\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\"\n        }}\n      >\n        <Menu\n          anchorEl={anchorEl}\n          classes={{ paper: classeOwns.root }}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={doLogout}>\n            <ListItemIcon>\n              <ExitToAppIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\"> {t(\"sign_out\")}</Typography>\n          </MenuItem>\n        </Menu>\n      </Popover>\n    </>\n  );\n};\n\nexport default UserSettings;\n","import React from \"react\";\nimport style from \"./layout.module.scss\";\n\nimport AppBar from \"../../ui-libraries/app-bar\";\nimport Toolbar from \"../../ui-libraries/tool-bar\";\nimport Typography from \"../../ui-libraries/typography\";\n\nimport MenuComponent from \"./layout-menu/layout-menu.component\";\nimport UserSettingsComponent from \"../user-settings/user-settings.component\";\n\nimport { useTranslation } from \"react-i18next\";\n\ninterface IProps {\n  isAuth: boolean;\n  onLogout: Function;\n}\n\nconst LayoutHeader: React.SFC<IProps> = ({ isAuth, onLogout }) => {\n  const { t } = useTranslation([\"common\"]);\n\n  if (!isAuth) {\n    return null;\n  }\n\n  return (\n    <AppBar id=\"a-h-t\" classes={{ root: style.header }}>\n      <Toolbar>\n        <MenuComponent />\n        <Typography variant=\"h6\" className={style.header__title}>\n          {t(\"app_name\")}\n        </Typography>\n        <UserSettingsComponent\n          classes={{ avatar: style.header__settings }}\n          onLogout={onLogout}\n        />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default LayoutHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./layout.module.scss\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport LayoutHeaderComponent from \"./layout-header.component\";\n\nimport { useAuthDataContext } from \"../../../context/auth.context\";\n\nimport classnames from \"classnames\";\n\nconst Layout: React.FC = ({ children }) => {\n  const { isAuth, onLogout } = useAuthDataContext();\n\n  return (\n    <>\n      <CssBaseline />\n      <LayoutHeaderComponent isAuth={isAuth} onLogout={onLogout} />\n      <div\n        className={classnames(style.body, {\n          [style[\"body--not-login\"]]: !isAuth,\n          [style[\"body--has-login\"]]: isAuth\n        })}\n      >\n        {children}\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","import React, { useMemo } from \"react\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport primaryColor from \"@material-ui/core/colors/deepPurple\";\nimport secondaryColor from \"@material-ui/core/colors/deepOrange\";\n\nconst ThemesProvider = (props: any) => {\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          primary: primaryColor,\n          secondary: secondaryColor\n        }\n      }),\n    []\n  );\n\n  return <ThemeProvider theme={theme} {...props} />;\n};\n\nexport default ThemesProvider;\n","import React, { Suspense } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport PublicTypeRoute from \"./public/public.type.route\";\nimport PrivateTypeRoute from \"./private/private.type.route\";\n\nimport LoadingComponent from \"../component/ui-own/progress/loader/loader.component\";\nimport LayoutComponent from \"../component/ui-own/layout/layout.component\";\n\nimport AuthProvider from \"../context/auth.context\";\nimport ThemeProvider from \"../context/theme.context\";\nimport { SnackbarProvider } from \"notistack\";\nimport ServiceProvider from \"../context/service.context\";\n\nconst Root: React.FC = () => {\n  return (\n    <Router>\n      <AuthProvider>\n        <ThemeProvider>\n          <SnackbarProvider>\n            <ServiceProvider>\n              <LayoutComponent>\n                <Suspense fallback={<LoadingComponent />}>\n                  <PublicTypeRoute />\n                  <PrivateTypeRoute />\n                </Suspense>\n              </LayoutComponent>\n            </ServiceProvider>\n          </SnackbarProvider>\n        </ThemeProvider>\n      </AuthProvider>\n    </Router>\n  );\n};\n\nexport default Root;\n","export const asyncer = (dispatch: any, state: any) => (action: any) =>\n  typeof action === \"function\" ? action(dispatch, state) : dispatch(action);\n\nexport const logger = (\n  action: object,\n  prevState: object,\n  currentState: object\n) => {\n  console.groupCollapsed(\"Logger\");\n  console.log(\"%c Action:\", \"color: blue\", action);\n  console.log(\"%c Previous State:\", \"color: red\", prevState);\n  console.log(\"%c Current State:\", \"color: green\", currentState);\n  console.groupEnd();\n};\n","// import * as authReducer from \"./auth\";\n\nimport { IState } from \"./types\";\n\nimport { logger } from \"./middlewares\";\n\nexport const initialState: IState = {\n  // auth: authReducer.initialState\n};\n\nexport default function mainReducer(state: IState, action: any) {\n  // Receiving previous state here\n  // const { auth } = state;\n\n  // Receiving current state here\n  const currentState = {\n    // auth: authReducer.reducer(auth, action)\n  };\n\n  // Middlewares\n  if (process.env.NODE_ENV !== \"production\") {\n    logger(action, state, currentState);\n  }\n\n  return currentState;\n}\n","import React, {\n  createContext,\n  useContext,\n  useReducer,\n  useCallback\n} from \"react\";\n\nimport { IContextProps } from \"./types\";\n\nimport { asyncer } from \"./middlewares\";\nimport mainReducer, { initialState } from \"./reducer\";\n\nconst GlobalStore = createContext({} as IContextProps<any, any>);\n\nexport const useGlobalStore = () => useContext(GlobalStore);\n\nexport default function Provider({ children }: { children: React.ReactNode }) {\n  const [state, dispatchBase] = useReducer(mainReducer, initialState);\n\n  const dispatch = useCallback(asyncer(dispatchBase, state), []);\n  \n  return (\n    <GlobalStore.Provider value={{ state, dispatch }}>\n      {children}\n    </GlobalStore.Provider>\n  );\n}\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources: {\n      en: {\n        common: {\n          app_name: \"Jaibu\",\n          lets_go: \"Let's Go\",\n          sign_in: \"SIGN IN\",\n          sign_out: \"Sign out\",\n          username: \"Username\",\n          password: \"Password\",\n          delete: \"Delete\",\n          this_field_is_required: \"This field is required\",\n          dashboard: \"Dashboard\",\n          users: \"Users\",\n          fields: \"Fields\"\n        },\n        todo: {\n          input_placeholder:\n            \"Enter todo name here (Press key Enter to add more)\"\n        }\n      },\n      vi: {}\n    },\n    lng: \"en\",\n    fallbackLng: \"en\",\n\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\nexport default i18n;\n","import \"./utils/support-old-browsers.util\";\n\nimport \"./styles/index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Route from \"./routes/index.route\";\n\nimport Provider from \"./store\";\n\nimport { setUpApi } from \"./utils/http-interceptors/request\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./i18n\";\n\nfunction generateUI(): void {\n  const root: HTMLElement = document.createElement(\"div\");\n  root.id = \"approot\";\n\n  document.body.append(root);\n\n  ReactDOM.render(\n    <Provider>\n      <Route />\n    </Provider>,\n    root\n  );\n}\n\nfunction createMagic() {\n  setUpApi();\n\n  generateUI();\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.register();\n}\n\n// this is a magic\ncreateMagic();\n","export const API_ENDPOINT = \"/api/\";\nexport const API_REQUEST = \"API_REQUEST\";\n\nexport const JWT_THE_KEY_OF_THE_LIFE = \"s_i_love_my_life\";\n\nexport enum HTTP_CODE {\n  Unauthorized = 401\n}\n\nexport enum SNACKBAR_TYPE {\n  Error = \"error\"\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"layout_header__2TCtF\",\"fadeInDown\":\"layout_fadeInDown__2ItL2\",\"header--stop\":\"layout_header--stop__15mp4\",\"unset\":\"layout_unset__3Xdx0\",\"header__title\":\"layout_header__title__3mGLk\",\"header__settings\":\"layout_header__settings__3WVhZ\",\"body\":\"layout_body__3kYev\",\"body--has-login\":\"layout_body--has-login__3ynAL\",\"body--not-login\":\"layout_body--not-login__2IebA\"};","import React, {\n  createContext,\n  useState,\n  useContext,\n  useMemo,\n  useCallback\n} from \"react\";\n\nimport { setToken, removeToken, getUser } from \"../utils/auth\";\n\ninterface IAuthContext {\n  isAuth: boolean;\n  authData: any;\n  onLogin: any;\n  onLogout: any;\n}\n\nexport const AuthDataContext = createContext<IAuthContext>({\n  isAuth: false,\n  authData: null,\n  onLogin: null,\n  onLogout: null\n});\n\nconst AuthDataProvider = (props: any) => {\n  const [authData, setAuthData] = useState(getUser());\n\n  /* The first time the component is rendered, it tries to\n   * fetch the auth data from a source, like a cookie or\n   * the localStorage.\n   */\n\n  const isAuth: boolean = useMemo(() => (authData ? true : false), [authData]);\n  const onLogin = useCallback((user: any) => {\n    setAuthData(user);\n    setToken(user);\n  }, []);\n\n  const onLogout = useCallback(() => {\n    setAuthData(null);\n    removeToken();\n  }, []);\n\n  return (\n    <AuthDataContext.Provider\n      value={{ isAuth, authData, onLogin, onLogout }}\n      {...props}\n    />\n  );\n};\n\nexport const useAuthDataContext = () =>\n  useContext<IAuthContext>(AuthDataContext);\n\nexport default AuthDataProvider;\n","import { JWT_THE_KEY_OF_THE_LIFE } from \"../constants/common\";\n\nexport function setToken(data: { accesToken: string; refreshToken: string }) {\n  // localStorage.setItem(JWT_THE_KEY_OF_THE_LIFE, JSON.stringify(data));\n  alert(1);\n  localStorage.setItem(\n    JWT_THE_KEY_OF_THE_LIFE,\n    JSON.stringify({\n      accessToken: `eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOiJiMDhmODZhZi0zNWRhLTQ4ZjItOGZhYi1jZWYzOTA0NjYwYmQifQ.-xN_h82PHVTCMA9vdoHrcZxH-x5mb11y1537t3rGzcM`\n    })\n  );\n}\n\nexport function removeToken() {\n  localStorage.removeItem(JWT_THE_KEY_OF_THE_LIFE);\n}\n\nexport function getToken() {\n  const token = localStorage.getItem(JWT_THE_KEY_OF_THE_LIFE);\n\n  try {\n    if (token) {\n      return JSON.parse(token);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction isTokenExpired(jwt: string) {\n  try {\n    if (jwt) {\n      const user = JSON.parse(atob(jwt.split(\".\")[1]));\n      const exp: Date = new Date(user.exp * 1000);\n      if (exp.getTime() > Date.now()) {\n        return false;\n      }\n    }\n  } catch (error) {\n    console.log(error);\n  }\n\n  return true;\n}\n\nexport function islogin(): boolean {\n  try {\n    const token = getToken();\n    if (isTokenExpired(token.accesToken)) {\n      if (isTokenExpired(token.refreshToken)) {\n        return false;\n      }\n    }\n  } catch (error) {}\n  return false;\n}\n\nexport function getUser(): any {\n  let user = null;\n  try {\n    // TODO: not done\n    const token = getToken();\n    user = JSON.parse(atob(token.accessToken.split(\".\")[1]));\n    user.firstString = user.userId.charAt(0);\n  } catch (error) {\n    console.log(error);\n  }\n\n  return user;\n}\n\nexport const getAccessToken = () => {\n  const token = getToken();\n\n  if (token) {\n    return token.accessToken;\n  }\n\n  return null;\n};\n\nexport const getRefreshToken = () => {\n  const token = getToken();\n\n  if (token) {\n    return token.refreshToken;\n  }\n\n  return null;\n};\n"],"sourceRoot":""}