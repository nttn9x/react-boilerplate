{"version":3,"sources":["component/ui-libraries/typography/index.tsx","component/ui-libraries/icon-button/index.tsx","routes/public/public.components.route.tsx","routes/public/public.type.route.tsx","routes/private/private.components.route.tsx","routes/private/private.type.route.tsx","component/ui-own/progress/loader/loader.component.tsx","component/ui-own/layout/layout-menu/layout-menu.component.tsx","component/ui-own/user-settings/user-settings.component.tsx","component/ui-own/layout/layout-header.component.tsx","component/ui-own/layout/layout.component.tsx","routes/index.route.tsx","store/middlewares.tsx","store/reducer.tsx","store/index.tsx","serviceWorker.ts","i18n.tsx","index.tsx","component/ui-own/layout/layout.module.scss","utils/auth.tsx","context/auth.context.tsx"],"names":["routes","exact","path","component","lazy","PublicRoute","ListPublicRoutes","map","route","i","key","PrivateRoute","Routes","Component","rest","props","useAuthDataContext","isAuth","to","pathname","Circular","className","LayoutMenu","useState","anchorEl","setAnchorEl","edge","color","aria-label","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","useStyles","makeStyles","root","width","UserSettings","classes","onLogout","classeOwns","t","useTranslation","React","handleClose","Avatar","avatar","Popover","anchorOrigin","vertical","horizontal","transformOrigin","paper","ListItemIcon","variant","LayoutHeader","AppBar","id","style","header","Toolbar","header__title","header__settings","Layout","children","theme","useMemo","createMuiTheme","palette","type","primary","primaryColor","secondary","secondaryColor","ThemeProvider","CssBaseline","classnames","body","Root","fallback","asyncer","dispatch","state","action","initialState","mainReducer","GlobalStore","createContext","Provider","useReducer","dispatchBase","useCallback","value","isLocalhost","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","then","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","i18n","use","initReactI18next","init","resources","en","common","app_name","lets_go","sign_in","sign_out","username","password","delete","this_field_is_required","todo","input_placeholder","vi","lng","fallbackLng","interpolation","escapeValue","document","createElement","append","ReactDOM","render","generateUI","module","exports","KEY","AuthDataContext","authData","onLogin","useContext","AuthDataProvider","localStorage","getItem","getUser","setAuthData","user","setItem","JSON","stringify","setUser","removeItem"],"mappings":"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","file":"static/js/main.e011b5f0.chunk.js","sourcesContent":["export { default } from \"@material-ui/core/Typography\";\n","export { default } from \"@material-ui/core/IconButton\";\n","import { lazy } from \"react\";\nimport { RouteProps } from \"react-router-dom\";\n\nconst Login = lazy(() => import(\"../../pages/public/login/login.container\"));\n\nconst routes: RouteProps[] = [\n  {\n    exact: true,\n    path: \"/login\",\n    component: Login\n  }\n];\n\nexport default routes;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport ListPublicRoutes from \"./public.components.route\";\n\nconst PublicRoute: React.FC = () => (\n  <>\n    {ListPublicRoutes.map((route, i) => (\n      <Route key={i} {...route} />\n    ))}\n  </>\n);\n\nexport default PublicRoute;\n","import { lazy } from \"react\";\nimport { RouteProps } from \"react-router-dom\";\n\nconst Todo = lazy(() =>\n  import(\"../../pages/private/todo/container/todo.container\")\n);\nconst Page2 = lazy(() => import(\"../../pages/private/page2/page2.container\"));\nconst Settings = lazy(() =>\n  import(\"../../pages/private/settings/settings.container\")\n);\n\nconst routes: RouteProps[] = [\n  {\n    exact: true,\n    path: \"/\",\n    component: Todo\n  },\n  {\n    exact: true,\n    path: \"/page2\",\n    component: Page2\n  },\n  {\n    exact: true,\n    path: \"/settings\",\n    component: Settings\n  }\n];\n\nexport default routes;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport Routes from \"./private.components.route\";\n\nimport { useAuthDataContext } from \"../../context/auth.context\";\n\nconst withAuth = (Component: any) => (props: any) => {\n  const { isAuth } = useAuthDataContext();\n\n  if (!isAuth) {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/login\"\n        }}\n      />\n    );\n  }\n  return <Component {...props} />;\n};\n\nconst PrivateRoute: React.SFC = () => (\n  <>\n    {Routes.map(({ component, ...rest }: any, i) => (\n      <Route key={`key_r_p_${i}`} {...rest} component={withAuth(component)} />\n    ))}\n  </>\n);\n\nexport default PrivateRoute;\n","import React from \"react\";\n\nimport \"./loader.scss\";\n\nconst Circular: React.FC = () => {\n  return (\n    <div className=\"loader\">\n      <div className=\"loader__body\">\n        <div className=\"rect1\" />\n        <div className=\"rect2\" />\n        <div className=\"rect3\" />\n        <div className=\"rect4\" />\n        <div className=\"rect5\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Circular;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport IconButton from \"../../../ui-libraries/icon-button\";\nimport Menu from \"../../../ui-libraries/menu\";\nimport MenuItem from \"../../../ui-libraries/menu-item\";\nimport MenuIcon from \"../../../ui-libraries/icons/menu\";\n\nconst LayoutMenu: React.FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  function handleClick(event: React.MouseEvent<HTMLElement>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  return (\n    <>\n      <IconButton\n        edge=\"start\"\n        color=\"inherit\"\n        aria-label=\"menu\"\n        onClick={handleClick}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Link to=\"/\">\n          <MenuItem>Todo</MenuItem>\n        </Link>\n        <Link to=\"/page2\">\n          <MenuItem>page2</MenuItem>\n        </Link>\n        <Link to=\"/settings\">\n          <MenuItem>settings</MenuItem>\n        </Link>\n      </Menu>\n    </>\n  );\n};\n\nexport default LayoutMenu;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport IconButton from \"../../ui-libraries/icon-button\";\nimport Avatar from \"../../ui-libraries/avatar\";\nimport Popover from \"../../ui-libraries/popover\";\nimport Menu from \"../../ui-libraries/menu\";\nimport MenuItem from \"../../ui-libraries/menu-item\";\nimport ListItemIcon from \"../../ui-libraries/list-item-icon\";\nimport Typography from \"../../ui-libraries/typography\";\n\nimport ExitToAppIcon from \"../../ui-libraries/icons/exit-to-app\";\n\nimport { useTranslation } from \"react-i18next\";\n\ninterface IUserSettingsProps {\n  classes: any;\n  onLogout: Function;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300\n  }\n});\n\nconst UserSettings: React.FC<IUserSettingsProps> = ({ classes, onLogout }) => {\n  const classeOwns = useStyles();\n  const { t } = useTranslation([\"common\"]);\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  function handleClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function doLogout() {\n    onLogout();\n  }\n\n  return (\n    <>\n      <IconButton onClick={handleClick}>\n        <Avatar className={classes.avatar}>H</Avatar>\n      </IconButton>\n      <Popover\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\"\n        }}\n      >\n        <Menu\n          anchorEl={anchorEl}\n          classes={{ paper: classeOwns.root }}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={doLogout}>\n            <ListItemIcon>\n              <ExitToAppIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\"> {t(\"sign_out\")}</Typography>\n          </MenuItem>\n        </Menu>\n      </Popover>\n    </>\n  );\n};\n\nexport default UserSettings;\n","import React from \"react\";\nimport style from \"./layout.module.scss\";\n\nimport AppBar from \"../../ui-libraries/app-bar\";\nimport Toolbar from \"../../ui-libraries/tool-bar\";\nimport Typography from \"../../ui-libraries/typography\";\n\nimport MenuComponent from \"./layout-menu/layout-menu.component\";\nimport UserSettingsComponent from \"../user-settings/user-settings.component\";\n\nimport { useTranslation } from \"react-i18next\";\n\ninterface IProps {\n  isAuth: boolean;\n  onLogout: Function;\n}\n\nconst LayoutHeader: React.SFC<IProps> = ({ isAuth, onLogout }) => {\n  const { t } = useTranslation([\"common\"]);\n\n  if (!isAuth) {\n    return null;\n  }\n\n  return (\n    <AppBar id=\"a-h-t\" classes={{ root: style.header }}>\n      <Toolbar>\n        <MenuComponent />\n        <Typography variant=\"h6\" className={style.header__title}>\n          {t(\"app_name\")}\n        </Typography>\n        <UserSettingsComponent\n          classes={{ avatar: style.header__settings }}\n          onLogout={onLogout}\n        />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default LayoutHeader;\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./layout.module.scss\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport primaryColor from \"@material-ui/core/colors/deepPurple\";\nimport secondaryColor from \"@material-ui/core/colors/blue\";\n\nimport LayoutHeaderComponent from \"./layout-header.component\";\n\nimport { useAuthDataContext } from \"../../../context/auth.context\";\n\nimport classnames from \"classnames\";\n\nconst Layout: React.FC = ({ children }) => {\n  const { isAuth, onLogout } = useAuthDataContext();\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: isAuth ? \"dark\" : \"light\",\n          primary: primaryColor,\n          secondary: secondaryColor\n        }\n      }),\n    [isAuth]\n  );\n \n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <LayoutHeaderComponent isAuth={isAuth} onLogout={onLogout} />\n      <div\n        className={classnames(style.body, {\n          [style[\"body--not-login\"]]: !isAuth,\n          [style[\"body--has-login\"]]: isAuth\n        })}\n      >\n        {children}\n      </div>\n    </ThemeProvider>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","import React, { Suspense } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport PublicTypeRoute from \"./public/public.type.route\";\nimport PrivateTypeRoute from \"./private/private.type.route\";\n\nimport LoadingComponent from \"../component/ui-own/progress/loader/loader.component\";\nimport LayoutComponent from \"../component/ui-own/layout/layout.component\";\n\nimport AuthProvider from \"../context/auth.context\";\n\nconst Root: React.FC = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <LayoutComponent>\n          <Suspense fallback={<LoadingComponent />}>\n            <PublicTypeRoute />\n            <PrivateTypeRoute />\n          </Suspense>\n        </LayoutComponent>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default Root;\n","export const asyncer = (dispatch: any, state: any) => (action: any) =>\n  typeof action === \"function\" ? action(dispatch, state) : dispatch(action);\n\nexport const logger = (\n  action: object,\n  prevState: object,\n  currentState: object\n) => {\n  console.groupCollapsed(\"Logger\");\n  console.log(\"%c Action:\", \"color: blue\", action);\n  console.log(\"%c Previous State:\", \"color: red\", prevState);\n  console.log(\"%c Current State:\", \"color: green\", currentState);\n  console.groupEnd();\n};\n","// import * as authReducer from \"./auth\";\n\nimport { IState } from \"./types\";\n\nimport { logger } from \"./middlewares\";\n\nexport const initialState: IState = {\n  // auth: authReducer.initialState\n};\n\nexport default function mainReducer(state: IState, action: any) {\n  // Receiving previous state here\n  // const { auth } = state;\n\n  // Receiving current state here\n  const currentState = {\n    // auth: authReducer.reducer(auth, action)\n  };\n\n  // Middlewares\n  if (process.env.NODE_ENV !== \"production\") {\n    logger(action, state, currentState);\n  }\n\n  return currentState;\n}\n","import React, {\n  createContext,\n  useContext,\n  useReducer,\n  useCallback\n} from \"react\";\n\nimport { IContextProps } from \"./types\";\n\nimport { asyncer } from \"./middlewares\";\nimport mainReducer, { initialState } from \"./reducer\";\n\nconst GlobalStore = createContext({} as IContextProps<any, any>);\n\nexport const useGlobalStore = () => useContext(GlobalStore);\n\nexport default function Provider({ children }: { children: React.ReactNode }) {\n  const [state, dispatchBase] = useReducer(mainReducer, initialState);\n\n  const dispatch = useCallback(asyncer(dispatchBase, state), []);\n  \n  return (\n    <GlobalStore.Provider value={{ state, dispatch }}>\n      {children}\n    </GlobalStore.Provider>\n  );\n}\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources: {\n      en: {\n        common: {\n          app_name: \"S-Product\",\n          lets_go: \"Let's Go\",\n          sign_in: \"SIGN IN\",\n          sign_out: \"Sign out\",\n          username: \"Username\",\n          password: \"Password\",\n          delete: \"Delete\",\n          this_field_is_required: \"This field is required\"\n        },\n        todo: {\n          input_placeholder:\n            \"Enter todo name here (Press key Enter to add more)\"\n        }\n      },\n      vi: {}\n    },\n    lng: \"en\",\n    fallbackLng: \"en\",\n\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\nexport default i18n;\n","import \"./utils/support-old-browsers.util\";\n\nimport \"./styles/index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Route from \"./routes/index.route\";\n\nimport Provider from \"./store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./i18n\";\n\nfunction generateUI(): void {\n  const root: HTMLElement = document.createElement(\"div\");\n  root.id = \"approot\";\n\n  document.body.append(root);\n\n  ReactDOM.render(\n    <Provider>\n      <Route />\n    </Provider>,\n    root\n  );\n}\n\nfunction createMagic() {\n  generateUI();\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.register();\n}\n\n// this is a magic\ncreateMagic();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"layout_header__2TCtF\",\"fadeInDown\":\"layout_fadeInDown__2ItL2\",\"header--stop\":\"layout_header--stop__15mp4\",\"unset\":\"layout_unset__3Xdx0\",\"header__title\":\"layout_header__title__3mGLk\",\"header__settings\":\"layout_header__settings__3WVhZ\",\"body\":\"layout_body__3kYev\",\"body--has-login\":\"layout_body--has-login__3ynAL\",\"body--not-login\":\"layout_body--not-login__2IebA\"};","const KEY = \"app_key_s\";\n\nexport function islogin(): boolean {\n  try {\n    const jwt = localStorage.getItem(KEY);\n    // TODO: not done\n    if (jwt) {\n      return true;\n    }\n  } catch (error) {}\n  return false;\n}\n\nexport function getUser(): any {\n  try {\n    return localStorage.getItem(KEY);\n  } catch (error) {\n    return null;\n  }\n}\n\nexport function setUser(user: any) {\n  localStorage.setItem(KEY, JSON.stringify(user)); \n}\n\nexport function removeUser() {\n  localStorage.removeItem(KEY);\n}\n","import React, {\n  createContext,\n  useState,\n  useContext,\n  useMemo,\n  useCallback\n} from \"react\";\n\nimport { setUser, removeUser, getUser } from \"../utils/auth\";\n\ninterface IAuthContext {\n  isAuth: boolean;\n  authData: any;\n  onLogin: any;\n  onLogout: any;\n}\n\nexport const AuthDataContext = createContext<IAuthContext>({\n  isAuth: false,\n  authData: null,\n  onLogin: null,\n  onLogout: null\n});\n\nconst AuthDataProvider = (props: any) => {\n  const [authData, setAuthData] = useState(getUser());\n\n  /* The first time the component is rendered, it tries to\n   * fetch the auth data from a source, like a cookie or\n   * the localStorage.\n   */\n\n  const isAuth: boolean = useMemo(() => (authData ? true : false), [authData]);\n  const onLogin = useCallback((user: any) => {\n    setAuthData(user);\n    setUser(user);\n  }, []);\n\n  const onLogout = useCallback(() => {\n    setAuthData(null);\n    removeUser();\n  }, []);\n\n  return (\n    <AuthDataContext.Provider\n      value={{ isAuth, authData, onLogin, onLogout }}\n      {...props}\n    />\n  );\n};\n\nexport const useAuthDataContext = () =>\n  useContext<IAuthContext>(AuthDataContext);\n\nexport default AuthDataProvider;\n"],"sourceRoot":""}