{"version":3,"sources":["pages/public/login/login.module.scss","pages/public/login/login-form.component.tsx","pages/public/login/login-button.component.tsx","pages/public/login/login.container.tsx","pages/public/login/store/login.store.tsx"],"names":["module","exports","LoginForm","values","touched","errors","handleBlur","handleChange","t","useState","showPassword","setShowPassword","isErrorUserName","username","Boolean","isErrorPassword","password","FormControl","classes","root","styles","error","Input","autoComplete","value","name","inputProps","onBlur","onChange","placeholder","startAdornment","InputAdornment","aria-label","position","FormHelperText","type","endAdornment","edge","onClick","onMouseDown","event","preventDefault","LoginButton","React","memo","label","Fab","variant","size","color","LoginSchema","Yup","shape","required","Login","history","useTranslation","useAuthDataContext","isAuth","onLogin","handleLogin","push","useOwnRedux","to","initialValues","validationSchema","onSubmit","actions","handleSubmit","rest","className","login"],"mappings":"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","file":"static/js/5.099a301d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__s9R7P\",\"login__app-name\":\"login_login__app-name__1pOpZ\",\"login__field\":\"login_login__field__2606E\"};","import React, { useState } from \"react\";\nimport styles from \"./login.module.scss\";\n\nimport FormControl from \"../../../component/ui-libraries/form-control\";\nimport FormHelperText from \"../../../component/ui-libraries/form-helper-text\";\nimport Input from \"../../../component/ui-libraries/input\";\nimport IconButton from \"../../../component/ui-libraries/icon-button\";\nimport InputAdornment from \"../../../component/ui-libraries/input-adornment\";\nimport PermIdentityIcon from \"../../../component/ui-libraries/icons/perm-identity\";\nimport LockOpenIcon from \"../../../component/ui-libraries/icons/lock-open\";\nimport VisibilityIcon from \"../../../component/ui-libraries/icons/visibility\";\nimport VisibilityOffIcon from \"../../../component/ui-libraries/icons/visibility-off\";\n\ninterface ILoginFormProps {\n  values: any;\n  touched: any;\n  errors: any;\n  handleBlur: any;\n  handleChange: any;\n  t: any;\n}\n\nconst LoginForm: React.FC<ILoginFormProps> = ({\n  values,\n  touched,\n  errors,\n  handleBlur,\n  handleChange,\n  t\n}) => {\n  const [showPassword, setShowPassword] = useState<Boolean>(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n  };\n\n  const isErrorUserName = touched.username && Boolean(errors.username);\n  const isErrorPassword = touched.password && Boolean(errors.password);\n  return (\n    <>\n      <FormControl\n        classes={{ root: styles[\"login__field\"] }}\n        error={isErrorUserName}\n      >\n        <Input\n          autoComplete=\"new-password\"\n          value={values.username}\n          name=\"username\"\n          inputProps={{\n            \"aria-label\": \"username\"\n          }}\n          onBlur={handleBlur}\n          onChange={handleChange}\n          placeholder={t(`username`)}\n          startAdornment={\n            <InputAdornment aria-label=\"User Name Icon\" position=\"start\">\n              <PermIdentityIcon />\n            </InputAdornment>\n          }\n        />\n        <FormHelperText>\n          {isErrorUserName && t(`${errors.username}`)}\n        </FormHelperText>\n      </FormControl>\n      <FormControl\n        classes={{ root: styles[\"login__field\"] }}\n        error={Boolean(isErrorPassword)}\n      >\n        <Input\n          placeholder={t(`password`)}\n          value={values.password}\n          autoComplete=\"new-password\"\n          name=\"password\"\n          inputProps={{\n            \"aria-label\": \"password\"\n          }}\n          onBlur={handleBlur}\n          type={showPassword ? \"text\" : \"password\"}\n          onChange={handleChange}\n          startAdornment={\n            <InputAdornment aria-label=\"Password Icon\" position=\"start\">\n              <LockOpenIcon />\n            </InputAdornment>\n          }\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"Change Type Password\"\n                edge=\"end\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n              >\n                {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n        <FormHelperText>\n          {isErrorPassword && t(`${errors.password}`)}\n        </FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\n\nimport Fab from \"../../../component/ui-libraries/fab\";\n\ninterface ILoginButtonProps {\n  label: any;\n}\n\nconst LoginButton: React.SFC<ILoginButtonProps> = React.memo(\n  function LoginButton({ label }) {\n    return (\n      <Fab\n        variant=\"extended\"\n        size=\"medium\"\n        color=\"primary\"\n        aria-label=\"Login\"\n        type=\"submit\"\n      >\n        {label}\n      </Fab>\n    );\n  }\n);\n\nexport default LoginButton;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport styles from \"./login.module.scss\";\n\nimport { useOwnRedux } from \"./store/login.store\";\n\nimport { Formik } from \"formik\";\nimport Typography from \"../../../component/ui-libraries/typography\";\nimport LoginFormComponent from \"./login-form.component\";\nimport LoginButtonComponent from \"./login-button.component\";\n\nimport { useTranslation } from \"react-i18next\";\n\nimport * as Yup from \"yup\";\n\nconst LoginSchema = Yup.object().shape({\n  username: Yup.string().required(\"this_field_is_required\"),\n  password: Yup.string().required(\"this_field_is_required\")\n});\n\ninterface ILoginProps {\n  history: any;\n}\n\nconst Login: React.FC<ILoginProps> = ({ history }) => {\n  const { t } = useTranslation([\"common\"]);\n  const { isAuth, handleLogin } = useOwnRedux(history);\n\n  if (isAuth) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: \"\",\n        password: \"\"\n      }}\n      validationSchema={LoginSchema}\n      onSubmit={(values, actions) => {\n        handleLogin(values.username);\n      }}\n    >\n      {({ handleSubmit, ...rest }) => {\n        return (\n          <div className={styles.login}>\n            <div className={styles[\"login__app-name\"]}></div>\n            <form onSubmit={handleSubmit}>\n              <Typography variant=\"h5\" color=\"primary\">\n                {t(\"sign_in\")}\n              </Typography>\n              <LoginFormComponent t={t} {...rest} />\n              <LoginButtonComponent label={t(\"lets_go\")} />\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default Login;\n","import { useAuthDataContext } from \"../../../../context/auth.context\";\n\nexport function useOwnRedux(history: any) {\n  const { isAuth, onLogin } = useAuthDataContext();\n\n  function handleLogin(username: string) {\n    onLogin({ username });\n\n    history.push(\"/\");\n  }\n\n  return {\n    isAuth,\n    handleLogin\n  };\n}\n"],"sourceRoot":""}